import Link from "next/link";
import styles from "../../../styles/Home.module.css";
import Pokegrid from "../../../components/Pokegrid/Pokegrid";
import Head from "next/head";
import range from "lodash/range";
import Pagination from "@mui/material/Pagination";
import PaginationItem from "@mui/material/PaginationItem";
import Stack from "@mui/material/Stack";
import { Button } from "@mui/material";
import ArrowBackIcon from "@mui/icons-material/ArrowBack";
import FavoriteIcon from "@mui/icons-material/Favorite";

export default function PokegridPage({ pokemonJSON }) {
  const pokemonList = pokemonJSON.results;
  const remain = pokemonJSON.count % 3;
  const fillMap = { 0: 0, 1: 2, 2: 1 };

  return (
    <div className={styles.container}>
      <Head>
        <title>PokeGrid</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/pokemon.ico" />
      </Head>
      <div className={styles["pokegrid-header"]}>
        <div>PokeGrid</div>
      </div>

      <Stack alignItems="center" sx={{ marginBottom: "2rem" }}>
        <Link href="/pokegrid/favorites">
          <Button
            variant="contained"
            size="large"
            endIcon={<FavoriteIcon />}
            className={styles["back-btn"]}
            sx={{
              "& .MuiSvgIcon-root": {
                fontSize: "30px !important",
              },
            }}
          >
            Check Favorites
          </Button>
        </Link>
      </Stack>

      <Stack alignItems="center" sx={{ margin: "2rem" }}>
        <Pagination
          className={styles["pagination-nav"]}
          count={39}
          color="primary"
          renderItem={(item) => (
            <Link href={`/pokegrid/page/${item.page}`}>
              <PaginationItem {...item} />
            </Link>
          )}
        />
      </Stack>

      <Pokegrid
        pokemonJSON={pokemonJSON}
        pokemonList={pokemonList}
        remain={remain}
        fillMap={fillMap}
      />

      <Stack alignItems="center" sx={{ marginBottom: "2rem" }}>
        <Link href="/">
          <Button
            variant="contained"
            size="large"
            startIcon={<ArrowBackIcon />}
            className={styles["back-btn"]}
            sx={{
              "& .MuiSvgIcon-root": {
                fontSize: "30px !important",
              },
            }}
          >
            Back to home
          </Button>
        </Link>
      </Stack>
    </div>
  );
}

export async function getStaticPaths() {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon/");
  const pokemonJSON = await res.json();
  const count = pokemonJSON.count;
  const totalPages = Math.ceil(count / 30);
  const paths = range(1, totalPages + 1).map((thisPage) => ({
    params: { page: thisPage.toString() },
  }));

  return {
    paths,
    fallback: false,
  };
}

export async function getStaticProps({ params }) {
  const thisPage = params.page;
  const thisOffset = (parseInt(thisPage) - 1) * 30;
  const res = await fetch(
    `https://pokeapi.co/api/v2/pokemon/?limit=30&offset=${thisOffset}`
  );
  const pokemonJSON = await res.json();

  return {
    props: {
      pokemonJSON,
    },
  };
}
